/* Свойства блоков    - задается блочным тегам */

/*
padding - внтренний отступ блочных тегов не может иметь отрицательное 
          значение    

    padding: 10px 20px 30px 40px; 

        10px -отступ от верхного края
        20px -отступ от правого края
        30px -отступ от нижного края
        40px -отступ от левого края

    padding: 10px 20px 30px;    
    
        10px -отступ от верхного края
        20px -отступ от правого и левого края
        30px -отступ от нижного края

    padding: 10px 20px;                     
    
        10px -отступ от верхного и нижного края
        20px -отступ от правого и левого края
            
    padding: 10px;                          
    
        10px -отступ от всех краев

    padding: 10%;                           
    
        10% вычисляется от ширини родителя, и при изменение размера монитора отступ изменится

--------------------------------------------------------------------------------

margin - внешний отступ блочных тегов, значения свойства margin записывается 
         как свойства paddingможет иметь отрицательные значение в отличии от padding 

    все аналогично padding
     
    ***margin: 0px auto;    оцентрируем блочный элемента по центру браузера, который ограничен по ширине

--------------------------------------------------------------------------------

with - ширина блочных тегов, а так же некоторых строчных, например img. 

    Как мы знаем блочный тег занимет всю ширину страницы, соответственно  если не задано ширина блока то он по умолчанию равен ширине всей страницы
                                                 
    -with: 100%;        делает ширину по ширине родителя
    -max-with: 50px;    максиамльную ширину блочных тегов а также некоторых     
        строчных        
    -min-with: 20px;    минимальная ширина блочных тегов а также некоторых 
        строчных

--------------------------------------------------------------------------------

height - высота блочных тегов а так же некоторых строчных, например img

    -height: 50%;        делает ширину 50% от ширини родителя 
    -max-hight: 50px;    максиамльную высота блочных тегов а также некоторых    
        строчных   
    -min-hight: 20px;   минимальная высота блочных тегов а также некоторых 
        строчных 

--------------------------------------------------------------------------------

box-sizing позволяет изменить этот алгоритм, чтобы свойства width и height задавали размеры не контента, а размеры блока. 

    by default the css box model add any padding or border to the total size of elements. 
    
        block with = content with + padding + border

    for example content with is 300px paddiing right and left are 25px each
    and border is 5px each size

        total with = 300 + 25 + 25 + 5 + 5 = 360

    and if we change padding each size to 50px then 
    
        total width = 300 + 50 + 50 + 5 + 5 = 410

    the same is actual for height

    the same will happen if even we set 100% or 100vw units it overfows the viewport with, and appear horizontal scrollbar this can have unexpected results

    we can fix it using box-sizing property - the value border-box forces any padding or borders in total size 

        .promo-card {
            width: 400px;
            padding: 25px;
            border: solid 5px #5035ff;

            box-sizing: border-box;
        }

    and now total with is 400px, it includes content, paddings and border. if we change padding or border size, the total with will not change. 
            
    Аналогично обстоит и с высотой блока. 
                
    Если border и padding и margin не задани, то они ранви 0, и ширина блока = ширину контента (width). Но изменения размера border и padding изменяет размер блока, что не хорошо и может привести неожиданным проблемам   

    content-box         свойства width и height задают ширину и высоту 
                        контента и не включают в себя значения полей (papdding) и границ (border).
    padding-box         свойства width и height включают в себя значения 
                        полей (padding), но не границ (border).
    border-box          свойства width и height включают в себя значения 
                        полей (padding) и границ (border). 
    inherit             наследует значение родителя.

--------------------------------------------------------------------------------

overflow - управляет отоброжением содержания блочного элемента       
                                
    visable - по умолчанию
    hidden - скривает все что находится за пределами блока напрмер при   
        исползования height (width), если текст больше чем заданная высота блока (текст выходит за рамки блока), то hidden прячет часть текста котрый вышел за рамки 
    scroll - принудительно включает горизонтальный и вертикальный скрол для 
        блока
    auto - включает скрол только тогда, когда он нужен

--------------------------------------------------------------------------------

display - многоцелевое свойства, которое определяет как элемент дольжен быть показан в документе

    block - преврашеает строчный тег в блочный, то есть строчный тег начинает 
        занимать всю ширину страници, и на него начинает действовать свойства with, height, padding, margin 
    inline - преврашеает блочный тег в строчный, то есть тег начианет занимать 
        ширину равную контенту (выстраивается в ширину). И на него перестает действовать свойства with, height, padding, margin
    inline-block - при приминения к строчным тегам. элемент остается строчным 
        то есть тег продалжает занимает ширину равную контенту, но на него начинает действовать свойства with, height, padding, margin при приминения к блоным тегам. элемент преврашеает в строчный, то есть тег начинает занимает ширину равную контенту, но на него продалжает действовать свойства with, height, padding, margin
    none - временно удаляет элемент из документа и занимаемая элементом место 
        не резервируется. Веб страница формируется так, словно элемента и не было.
    flex - преврашает элемент в flex элемент (смотреть урок по flexbox)
    grid - преврашает элемент в пкшв элемент (смотреть урок по grid)
                                                 
-------------------------------------------------------------------------------                                                                             border - граница вокруг элемента блочных тегов а так же некоторых строчных, например img     

    .container {
        border: 1px solid #000;
    }

    или

    .container {
       border-width: 1px;
       border-style: solid;
       border-color: black;
       
       border-radius: 5px;
    }

    border-style:           solid   -непреривная линия
                            dotted  -с точкаи
                            deshed  -пунктирная линия
    
    * тольшина границы влияет на содержимое блока, поскольку он отступает внутрь на тольшину границы. То есть при изменения тольшини границ блока, ширина блока не меняется, меняется содержимое блока  

    border-top:
    border-bottem:
    border-left:
    border-right:

    убераем какую то сторону border, в данном случае нижную. Содержимое займет место убрнного бордер:

        border: 1px solid #000000;   
        border-bottom: 0;     
    
        или

        border: 1px solid #000000;            
        border-bottom: none;

        
    border-radius - устанавливает радиус (скругления уголков блока) 

    border-radius: 10px 20px 30px 40px;     
        
            10px -радиус левый верхный угол
            20px -радиус правый верхный угол
            30px -радиус правый нижный угол
            40px -радиус левый нижный угол

        *создаем идельно ровный круг
            width: 100px;
            height: 100px;
            border: 5px solid #000000;
            border-radius:  50%; 

    border-radius также работает при остутсвии border. Если контенту с border-radius зададим и overflow-hidden, то увидим что угли контента не будут выдны
        
        .block {
            border-radius: 10px;
            overflow: hidden;
        }

--------------------------------------------------------------------------------

outline: 1px solid #000000; - внешная граница блока, устанавливает линию вокруг всего блока

    *в отличия от border, устанавливается не внутри блока а за границей блока
    outline не влияет на содержимое блока и нелзя указать для одной сторны. Толька сразу для четирех сторон для него не действует border-radius

    Если применить outline к строчным тегам, то оно не рисует квадрат а принимает форму контента

--------------------------------------------------------------------------------

box-shadow: 5px 10px 15px 20px #000000; добавляет тень блоку
                                                    
    5px - сдвиг по горизонтали (в право)
    10px - сдвиг по вертикали (вниз)
    15px - радиус теньи 
    20px - растояние теньи  (опциональный)
                                                
    box-shadow: inset 5px 10px 15px 20px #000000;   -тень внутри блока 

    box-shadow: 5px 10px 15px 20px #000000, inset 5px 10px 15px 20px #000000;   -несколько теньов для одного блока

        *border-radius работает и для тьени

--------------------------------------------------------------------------------

opacity: от 0 до 1; - определяет уровень прозрачности элемента

    0 - польная прозрачноcть, но место блока остается он не куда не исчезает
    1 - польная непразрачность

--------------------------------------------------------------------------------

visibility:  hidden; - предназначень для отоброжения или скрития блока
    
    visable - по умолчанию - ничего не происходит
    hidden - блок исчезнет, но в оличие от 'display: none;' его место некуда не исчезнет

--------------------------------------------------------------------------------
        
gap

    gap задает отступы между стольбцами и строками, является сокращением для свойства row-gap и column-gap 
    С помощю него задаем отступы безопасности, чтобы в случи чего элементы не прилипали друг к друга

    задаем 20px отступ и row-gap и column-gap (с верху, внизу и слева, справа)

        header__container {         
	    	display: flex;
	    	align-items: center;
	    	gap: 20px;
	    }

    можно row-gap и column-gap задать по отдельности

        header__container {         
		    display: flex;
		    align-items: center;
		    row-gap: 5px;           // между строками - сверху и внизу)
            column-gap: 20px;       // между столбцами - слева и справа)
	    }            
}

    